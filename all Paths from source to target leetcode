class Solution {
public:
    void dfs(vector<vector<int>>& graph,int u ,vector<vector<int>>& res,vector<int>& v)
    {
        int n = graph.size();
        if(u == n-1)
        {
            v.push_back(u);
            res.push_back(v);
            v.pop_back();
            return;
        }
        v.push_back(u);
        for(int x : graph[u])
        {
            dfs(graph,x,res,v);
        }
        v.pop_back();
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) 
    {
        vector<int>v;
        vector<vector<int>>res;
        dfs(graph,0,res,v);
        return res;
    }
};
