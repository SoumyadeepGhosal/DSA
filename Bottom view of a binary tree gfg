class Solution {
  public:
    vector <int> bottomView(Node *root) 
    {
        // Your Code Here
         vector<int>ans;
        if(root==NULL)
        {
            return ans;
        }
        map<int,int>m;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(!q.empty())
        {
            auto it = q.front();
            Node *node = it.first;
            int level = it.second;
            q.pop();
            auto it1 = m.find(level);
            if(it1!=m.end())
            {
                m[level]=node->data;
            }
            else
            {
                m.insert({level,node->data});
            }
            if(node->left)
            {
                q.push({node->left,level-1});
            }
            if(node->right)
            {
                q.push({node->right,level+1});
            }
        }
       for(auto it : m)
        {
            ans.push_back(it.second);
        }
        return ans;
    }
};
