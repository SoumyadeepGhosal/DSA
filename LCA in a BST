class Solution {
public:
    TreeNode* node;
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) 
    {
        if(root==NULL)
        {
            
            return root;
        }
        if(root->val==p->val||root->val==q->val)
        {
            node=root;
            return node;
        }
        if(p->val>root->val&&q->val<root->val||q->val>root->val&&p->val<root->val)
        {
            node=root;
            return node;
        }
        if(p->val>root->val&&q->val>root->val)
        {
            lowestCommonAncestor(root->right,p,q);
        }
        if(p->val<root->val&&q->val<root->val)
        {
            lowestCommonAncestor(root->left,p,q);
        }
        return node;
    }
};
