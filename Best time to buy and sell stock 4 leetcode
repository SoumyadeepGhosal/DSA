class Solution {
public:
    int solve(int ind,int buy,vector<int>& prices,int n,vector<vector<vector<int>>>& dp,int counter)
    {
        if(ind==n||counter==0)
        {
            return 0;
        }
        if(dp[ind][buy][counter]!=-1)
        {
          return dp[ind][buy][counter];
        }
        int profit;
        if(buy==1)
        {
            profit=max((-prices[ind]+solve(ind+1,0,prices,n,dp,counter)),(0+solve(ind+1,1,prices,n,dp,counter)));
        }
        else
        {
           profit=max((prices[ind]+solve(ind+1,1,prices,n,dp,counter-1)),(0+solve(ind+1,0,prices,n,dp,counter)));
        }
        return dp[ind][buy][counter]=profit;
    }
    int maxProfit(int k, vector<int>& prices) 
    {
        int n = prices.size();
        vector<vector<vector<int>>> dp(n, vector<vector<int>>(2, vector<int>(k+1, -1)));
        return solve(0,1,prices,n,dp,k);
    }
};
