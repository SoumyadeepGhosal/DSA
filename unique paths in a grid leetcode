class Solution {
public:
    int solve(int i,int j,vector<vector<int>>& dp)
    { 
        if(i==0&&j==0)
        {
           return 1;
        }
        if(i<0||j<0)
        {
            return 0;
        }
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        int left = solve(i,j-1,dp);
        int up = solve(i-1,j,dp);
        return dp[i][j]=left+up;
    }
    int uniquePaths(int m, int n) 
    {
        vector<vector<int>>dp;
        for(int i = 0;i<m;i++)
        {
            vector<int>v;
            for(int j = 0;j<n;j++)
            {
                v.push_back(-1);
            }
            dp.push_back(v);
        }
        return solve(m-1,n-1,dp);
    }
};
